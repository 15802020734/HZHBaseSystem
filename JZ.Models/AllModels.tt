<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="$(TargetDir)SqlSugar.dll" #>
<#@ assembly name="$(TargetDir)JZ.T4.dll"#>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.Text.RegularExpressions"#>
<#@ import namespace="JZ.T4"#>
<#@ import namespace="SqlSugar"#>
<#@ include file="$(TargetDir)ModelAuto.ttinclude"#>
<#    var manager2 = new Manager(Host, GenerationEnvironment, true) { OutputPath = Path.GetDirectoryName(Host.TemplateFile)}; #>

<# 
    ModelManager manager = new ModelManager();

    List<DbTableInfo> list=manager.GetTableList();
#>

<# 
    foreach (var item in list)
    {
        string tableName=item.Name;
        List<DbColumnInfo>  lstColumns=manager.GetColumnsByTableName(tableName);
        string strTableMemo=item.Description??"";
        
 #>

 <# 
        manager2.StartBlock(tableName+".cs");
 #>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码从T4模板生成。
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
using SqlSugar;
using System;

namespace JZ.Models
{
    /// <summary>	
    /// 数据表实体类：<#=            strTableMemo #> (<#=            tableName #>)
    /// </summary>
    [SugarTable("<#=            tableName #>")][Serializable]
    public partial class <#=            tableName #>:BaseEntity
    {       
<# 
        foreach (var com in lstColumns)
        {
            string strFieldMemo=com.ColumnDescription??"";
            strFieldMemo=strFieldMemo.Replace("\r\n"," ");
            string strSugarColumn=string.Empty;
            if(com.IsPrimarykey)
            {
                strSugarColumn="IsPrimaryKey = true";
            }
            if(com.IsIdentity)
            {
                if(!string.IsNullOrEmpty(strSugarColumn))                
                {
                    strSugarColumn+=",";
                }
                strSugarColumn+="IsIdentity = true";
            }                       
#>
        private <#=                manager.TransFromSqlType(com.DataType,com.IsNullable) #> _<#=                com.DbColumnName #> ;
        /// <summary>
        ///  <#=                strFieldMemo#>
        /// </summary>
        <#=                !string.IsNullOrEmpty(strSugarColumn)?"[SugarColumn("+strSugarColumn+")]":"" #>
        public  <#=                manager.TransFromSqlType(com.DataType,com.IsNullable) #> <#=                com.DbColumnName #> 
        {
            get
            {
            	return this._<#=                com.DbColumnName #>;
            }
            set
            {
            	if (this._<#=                com.DbColumnName #> != value)
            	{
            		base.SetValueCall("<#=                com.DbColumnName #>", this._<#=                com.DbColumnName #>);
            	}
            	this._<#=                com.DbColumnName #> = value;
            }
         }
<#
        }
#> 
    }
}

<#        manager2.EndBlock();
    }  
    manager2.Process(true); 
#>
